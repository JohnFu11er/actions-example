name: Build and Push Docker Image

on:
  # Trigger on pull request to the `main` branch
  pull_request:
    branches:
      - main

  # Trigger on push to any branch
  push:
    branches:
      - '**'  # Wildcard to match any branch
    tags:
      - '*'  # Wildcard to match any tag

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Check out the repository
    - name: Checkout code
      uses: actions/checkout@v2

    # Set up Docker Buildx (optional but recommended for multi-platform builds)
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Log in to GitHub Container Registry
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    # Build Docker image and tag with commit hash and version (if available)
    - name: Build and tag Docker image
      run: |

        # Assign variables
        IMAGE_REGISTRY=ghrc.io
        REPO_NAME="${{ github.repository }}"
        REPO_NAME_LOWERCASE=$(echo "$REPO_NAME" | tr '[:upper:]' '[:lower:]')
        IMAGE_NAME="$IMAGE_REGISTRY/$REPO_NAME_LOWERCASE/my-image"
        COMMIT_SHA=$(git rev-parse --short HEAD)
        

        # If the commit is tagged, use the tag as the version,
        # unless there is no tag, then use the "latest" if on main branch.
        # Otherwise do not set an additional tag
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          TAG=$(echo $GITHUB_REF | sed 's/refs\/tags\///')
        elif [[ $GITHUB_REF == refs/heads/main ]]; then
          TAG="latest"
        else
          TAG=""
        fi


        # Persist the variables to the next stage in the workflow
        echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV
        echo "COMMIT_SHA=$COMMIT_SHA" >> $GITHUB_ENV
        echo "TAG=$TAG" >> $GITHUB_ENV


        # Build the image for the commit sha and tag(if defined)
        if [[ $TAG == "" ]]; then
          docker buildx build \
            --platform linux/amd64 \
            --tag $IMAGE_NAME:$COMMIT_SHA \
            --file Dockerfile .
            --push
        else
          docker buildx build \
            --platform linux/amd64 \
            --tag $IMAGE_NAME:$COMMIT_SHA \
            --tag $IMAGE_NAME:$TAG \
            --file Dockerfile .
            --push
        fi


    # Push the Docker image to GitHub Container Registry
    # - name: Push Docker image to GHCR
    #   run: |
    #     docker push $IMAGE_NAME:$COMMIT_SHA

    #     if [[ $TAG != "" ]]; then
    #       docker push $IMAGE_NAME:$TAG
    #     fi
